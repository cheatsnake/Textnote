{"version":3,"sources":["components/Editor/Editor.jsx","icons/add.svg","icons/delete.svg","icons/menu.svg","icons/logout.svg","context/AuthContext.js","components/NoteList/NoteList.jsx","pages/AppPage/AppPage.jsx","pages/AuthPage/AuthPage.jsx","App.js","hooks/auth.hook.js","routes.js","index.js"],"names":["Editor","activeNote","onEdit","menuActive","onEditNote","item","value","Date","now","className","type","placeholder","maxLength","title","onChange","e","target","name","id","body","AuthContext","createContext","NoteList","notes","addNote","delNote","active","setActive","setMenuActive","sortList","sort","note1","note2","time","useState","search","setSearch","logout","useContext","searchNotes","filter","note","toLowerCase","includes","toLocaleLowerCase","onClick","src","MenuIcon","alt","AddIcon","map","window","innerWidth","substr","DelIcon","LogoutIcon","href","AppPage","uuid","setNotes","userId","notesId","setNotesId","createNote","useCallback","a","axios","post","headers","then","response","data","_id","console","log","getNotes","get","params","length","updateNotes","put","useEffect","localStorage","setItem","JSON","stringify","newNote","confirm","find","editedNote","editedNotes","AuthPage","history","useHistory","errLog","setErrLog","errReg","setErrReg","email","password","form","setForm","login","changeHandler","event","regHandler","push","loginHandler","token","Fragment","path","onSubmit","preventDefault","htmlFor","required","to","App","setToken","setUserId","isReady","setIsReady","jwtToken","parse","getItem","removeItem","useAuth","isLogin","routes","exact","component","useRoutes","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.82928495.chunk.js","sourcesContent":["import React from 'react';\r\nimport './editor.scss';\r\n\r\nconst Editor = ({activeNote, onEdit, menuActive}) => {\r\n\r\n    const onEditNote = (item, value) => {\r\n        onEdit({\r\n            ...activeNote,\r\n            [item]: value,\r\n            time: Date.now()\r\n        })\r\n    }\r\n\r\n    if(!activeNote) {\r\n        return (\r\n            <div className={menuActive ? \"editor editor_empty\" : \"editor editor_empty editor_full\"}>\r\n                <div className=\"no__note\">\r\n                    Select or create a note\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={menuActive ? \"editor\" : \"editor editor_full\"}>\r\n            <input \r\n                className=\"editor__title\" \r\n                type=\"text\" \r\n                placeholder=\"Title\" \r\n                maxLength=\"32\"\r\n                value={activeNote.title} \r\n                onChange={(e) => onEditNote('title', e.target.value)}/>\r\n            \r\n            <textarea \r\n                className=\"editor__area\" \r\n                name=\"text\" \r\n                placeholder=\"Type something...\" \r\n                id=\"text\"\r\n                value={activeNote.body}\r\n                onChange={(e) => onEditNote('body', e.target.value)}\r\n                ></textarea>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Editor;","export default __webpack_public_path__ + \"static/media/add.f8eed078.svg\";","export default __webpack_public_path__ + \"static/media/delete.f82aad06.svg\";","export default __webpack_public_path__ + \"static/media/menu.0c7a62dc.svg\";","export default __webpack_public_path__ + \"static/media/logout.9b3f4199.svg\";","import { createContext } from 'react';\r\n\r\nexport const AuthContext = createContext()","import React, { useContext, useState } from 'react';\r\nimport './NoteList.scss';\r\nimport './Buttons.scss';\r\nimport AddIcon from '../../icons/add.svg';\r\nimport DelIcon from '../../icons/delete.svg';\r\nimport MenuIcon from '../../icons/menu.svg';\r\nimport LogoutIcon from '../../icons/logout.svg';\r\nimport { AuthContext } from '../../context/AuthContext';\r\n\r\nconst NoteList = ({notes, addNote, delNote, active, setActive, menuActive, setMenuActive}) => {\r\n\r\n    const sortList = notes.sort((note1, note2) => note2.time - note1.time);\r\n    const [search, setSearch] = useState('');\r\n    const {logout} = useContext(AuthContext);\r\n\r\n    function select(id) {\r\n        setActive(id);\r\n        if (window.innerWidth < 768) {\r\n            setMenuActive(false);\r\n        }\r\n    }\r\n\r\n    const searchNotes = sortList.filter(note => {\r\n        return note.title.toLowerCase().includes(search.toLocaleLowerCase()) || note.body.toLowerCase().includes(search.toLocaleLowerCase());\r\n    });\r\n    \r\n    return (\r\n        <>\r\n            <button \r\n                onClick={() => setMenuActive()}\r\n                className=\"btn btn_menu\">\r\n                <img src={MenuIcon} alt=\"\" />\r\n            </button>\r\n            <div className={menuActive ? \"note-list\" : \"note-list note-list_off\"}>\r\n                <div className=\"note-list__header\">\r\n                    <div className=\"note-list__inner\">\r\n                        <h2>Textnote</h2>\r\n                    </div>\r\n                    <button \r\n                        className=\"btn btn_add\"\r\n                        onClick={addNote}\r\n                        >\r\n                            <img src={AddIcon} alt=\"\" />\r\n                        </button>\r\n                </div>\r\n                <div className=\"note-list__search\">\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"Type to search note\" \r\n                        className=\"search\"\r\n                        onChange={(e) => setSearch(e.target.value)} />\r\n                </div>\r\n                <div className=\"note-list__lists\">\r\n                    {\r\n                        searchNotes.map((note) => (\r\n                            <div \r\n                                key={note.id} \r\n                                className={`note-list__item ${note.id === active && 'active'}`}\r\n                                onClick={() => select(note.id)}>\r\n                                <div className=\"note-list__item__title\">{note.title ? note.title : 'Untitled'}</div>\r\n                                <div className=\"note-list__item__body\">{\r\n                                    note.body.includes(' ') ? note.body.substr(0, 75) + '...' : 'Empty note'\r\n                                }</div>\r\n                                <button \r\n                                    onClick={() => delNote(note.id)}\r\n                                    className=\"btn btn_del\">\r\n                                        <img src={DelIcon} alt=\"\" />\r\n                                    </button>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n                <div className=\"note-list__footer\">\r\n                    <button className=\"btn btn_logout\" onClick={logout}>\r\n                        <img src={LogoutIcon} alt=\"Logout\"/>\r\n                    </button>\r\n                    <a href=\"https://cheatsnake.github.io/\" className=\"label\">\r\n                        Made by <b>Yury</b>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NoteList;","import React, { useEffect, useState, useContext, useCallback } from 'react';\r\nimport uuid from 'react-uuid';\r\nimport Editor from '../../components/Editor/Editor';\r\nimport NoteList from '../../components/NoteList/NoteList';\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../../context/AuthContext';\r\n\r\n\r\nconst AppPage = () => {\r\n\r\n    const [notes, setNotes] = useState(\r\n        [\r\n            {\r\n                id: uuid(),\r\n                title: 'Welcome to Textnote',\r\n                body: `Textnote is a simple text editor for creating text notes. This is an absolutely free app.\r\n\r\nThe source code of the application is available at the link\r\nhttps://github.com/cheatsnake`,\r\n                time: Date.now()\r\n            }\r\n        ]\r\n    );\r\n\r\n    const {userId} = useContext(AuthContext);\r\n    const [active, setActive] = useState(false);\r\n    const [menuActive, setMenuActive] = useState(true);\r\n    const [notesId, setNotesId] = useState(null)\r\n\r\n    const addNote = () => {\r\n        const newNote = {\r\n            id: uuid(),\r\n            title: 'Untitled',\r\n            body: '',\r\n            time: Date.now()\r\n        }\r\n\r\n        setNotes([newNote, ...notes]);\r\n        setActive(newNote.id);\r\n    }\r\n\r\n    const createNote = useCallback(async () => {\r\n        try {\r\n            await axios.post('https://txtnote.herokuapp.com/api/note/add', {notes, userId}, {\r\n                headers: {'Content-Type': 'application/json'}\r\n            }).then(response => {\r\n                setNotesId(response.data._id);\r\n            })\r\n        } catch(e) {\r\n            console.log(e);\r\n        }\r\n    }, [notes, userId]);\r\n\r\n    const getNotes = useCallback(async () => {\r\n        try {\r\n            await axios.get('https://txtnote.herokuapp.com/api/note', {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                params: {userId}\r\n            })\r\n            .then((response) => {\r\n                if (response.data.length) {\r\n                    // console.log('data OK');\r\n                    setNotes(response.data[0].notes);\r\n                    setNotesId(response.data[0]._id);\r\n                } else if (userId) {\r\n                    // console.log('CREATE NEW USER DATA');\r\n                    createNote();\r\n                } else {\r\n                    // console.log('NOT FOUND');\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }, [createNote, userId])\r\n\r\n    const updateNotes = useCallback(async (id) => {\r\n        try {\r\n            await axios.put(`https://txtnote.herokuapp.com/api/note/update/${id}`, {notes}, {\r\n                headers: {'Content-Type': 'application/json'}\r\n            })\r\n            .then(response => console.log(response))\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }, [notes]);\r\n\r\n    useEffect(() => {\r\n        // console.log('Hello');\r\n        getNotes();\r\n    }, [userId]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"notes\", JSON.stringify(notes))\r\n        if (notesId) {\r\n            updateNotes(notesId);\r\n        }\r\n    }, [notes, updateNotes, notesId]);\r\n\r\n    const delNote = (id) => {\r\n        let isBoss = window.confirm(\"Do you really want to delete this note?\");\r\n        \r\n        if (!isBoss) {\r\n            return null;\r\n        }\r\n        setNotes(notes.filter((note) => note.id !== id));\r\n    }\r\n\r\n    const onEdit = (editedNote) => {\r\n        const editedNotes = notes.map((note) => {\r\n            if (note.id === active) {\r\n                return editedNote;\r\n            }\r\n            return note;\r\n        });\r\n        setNotes(editedNotes);\r\n    }\r\n\r\n    const activeNote = () => {\r\n        return notes.find((note) => note.id === active);\r\n    }\r\n\r\n    const toggleMenuActive = () => {\r\n        let x = menuActive\r\n        setMenuActive(!x)\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <NoteList \r\n                notes={notes} \r\n                addNote={addNote} \r\n                delNote={delNote}\r\n                active={active}\r\n                setActive={setActive}\r\n                menuActive={menuActive}\r\n                setMenuActive={toggleMenuActive}\r\n            />\r\n            <Editor\r\n                activeNote={activeNote()}\r\n                onEdit={onEdit}\r\n                menuActive={menuActive}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AppPage;","import React, {useState, useContext} from 'react';\r\nimport {BrowserRouter, Switch, Route, Link, useHistory} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {AuthContext} from '../../context/AuthContext'\r\n\r\nimport './AuthPage.scss'\r\n\r\nconst AuthPage = () => {\r\n    \r\n    const history = useHistory(); \r\n\r\n    const [errLog, setErrLog] = useState(false);\r\n    const [errReg, setErrReg] = useState(false);\r\n    const [form, setForm] = useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n    const {login} = useContext(AuthContext)\r\n\r\n    const changeHandler = (event) => {\r\n        setForm({...form, [event.target.name]: event.target.value})\r\n    }\r\n\r\n    const regHandler = async () => {\r\n        try {\r\n            await axios.post('https://txtnote.herokuapp.com/api/auth/reg', {...form}, {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n            history.push('/')\r\n        } catch(e) {\r\n            console.log(e);\r\n            setErrReg(true);\r\n        }\r\n    }\r\n\r\n    const loginHandler = async () => {\r\n        try {\r\n            await axios.post('https://txtnote.herokuapp.com/api/auth/log', {...form}, {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n            .then(response => {\r\n                login(response.data.token, response.data.userId)\r\n            })\r\n        } catch(e) {\r\n            console.log(e);\r\n            setErrLog(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n       <BrowserRouter>\r\n            <Switch>\r\n                <React.Fragment>\r\n                <div className=\"container\">\r\n                    <Route path=\"/log\">\r\n                        <div className=\"authPage\">\r\n                            <h3>Log in</h3>\r\n                            <form className=\"form form_login\" onSubmit={e => e.preventDefault()}>\r\n                                <div className=\"input__wrapper\">\r\n                                    <label htmlFor=\"email\">Email</label>\r\n                                    <div className=\"input\">\r\n                                        <input \r\n                                            type=\"email\" \r\n                                            name=\"email\"\r\n                                            required \r\n                                            onChange={changeHandler}/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"input__wrapper\">\r\n                                    <label htmlFor=\"password\">Password</label>\r\n                                    <div className=\"input\">\r\n                                        <input \r\n                                            type=\"password\" \r\n                                            name=\"password\" \r\n                                            required \r\n                                            onChange={changeHandler}/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"auth__wrapper\">\r\n                                    <button className=\"btn_auth\" onClick={loginHandler}>Login</button>\r\n                                    <Link to=\"/reg\" className=\"registration\">New User?</Link>\r\n                                </div>\r\n                            </form>\r\n\r\n                            {errLog ? (\r\n                            <div className=\"error\">\r\n                                <p><b>Authorization error</b>. Please enter the correct data or create a new user.</p>\r\n                            </div>\r\n                            ) : null}\r\n\r\n                        </div>\r\n                    </Route>\r\n\r\n                    <Route path=\"/reg\">\r\n                        <div className=\"authPage\">\r\n                            <h3>Create a new User</h3>\r\n                            <form className=\"form form_login\" onSubmit={e => e.preventDefault()}>\r\n                                <div className=\"input__wrapper\">\r\n                                    <label htmlFor=\"email\">Email</label>\r\n                                    <div className=\"input\">\r\n                                        <input \r\n                                            type=\"email\" \r\n                                            name=\"email\" \r\n                                            required \r\n                                            onChange={changeHandler}/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"input__wrapper\">\r\n                                    <label htmlFor=\"password\">Password</label>\r\n                                    <div className=\"input\">\r\n                                        <input \r\n                                            type=\"password\" \r\n                                            name=\"password\" \r\n                                            required \r\n                                            onChange={changeHandler}/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"auth__wrapper\">\r\n                                    <button className=\"btn_auth\" onClick={regHandler}>Sign up</button>\r\n                                    <Link to=\"/log\" className=\"registration\">Already registered?</Link>\r\n                                </div>\r\n                            </form>\r\n                            {errReg ? (\r\n                            <div className=\"error\">\r\n                                <p><b>Registration error</b>. The user already exists or incorrect data is entered. Check the Email address you entered and make sure that the password contains at least 6 characters.</p>\r\n                            </div>\r\n                            ) : null}\r\n                        </div>\r\n                    </Route>\r\n                </div>\r\n            </React.Fragment>\r\n\r\n            </Switch>\r\n       </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default AuthPage;","import React from 'react';\nimport {BrowserRouter} from 'react-router-dom';\nimport { useRoutes } from './routes';\nimport { AuthContext } from './context/AuthContext';\nimport { useAuth } from './hooks/auth.hook';\nimport './App.css';\n\nfunction App() {\n\n  const {login, logout, token, userId, isReady} = useAuth()\n  const isLogin = !!token\n  const routes = useRoutes(isLogin)\n\n  return (\n    <AuthContext.Provider value={{ login, logout, token, userId, isReady, isLogin }}>\n      <div className=\"app\">\n        <BrowserRouter>\n          { routes }\n        </BrowserRouter>\n      </div>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import { useState, useEffect, useCallback } from 'react';\r\n\r\nexport const useAuth = () => {\r\n    const [token, setToken] = useState(null)\r\n    const [userId, setUserId] = useState(null)\r\n    const [isReady, setIsReady] = useState(false)\r\n\r\n\r\n    const login = useCallback((jwtToken, id) => {\r\n        setToken(jwtToken)\r\n        setUserId(id)\r\n        localStorage.setItem('userData', JSON.stringify({\r\n            userId: id,\r\n            token: jwtToken\r\n        }))\r\n    }, [])\r\n\r\n    const logout = () => {\r\n        setToken(null)\r\n        setUserId(null)\r\n        localStorage.removeItem('userData')\r\n        localStorage.removeItem('notes')\r\n    }\r\n\r\n    useEffect(() => {\r\n        const data = JSON.parse(localStorage.getItem('userData'))\r\n\r\n        if (data && data.token) {\r\n            login(data.token, data.userId)\r\n        }\r\n\r\n        setIsReady(true)\r\n\r\n    }, [login])\r\n\r\n    return {login, logout, token, userId, isReady}\r\n}","import React from 'react';\r\nimport {Switch, Route, Redirect} from 'react-router-dom';\r\nimport AppPage from './pages/AppPage/AppPage';\r\nimport AuthPage from './pages/AuthPage/AuthPage';\r\n\r\nexport const useRoutes = (isLogin) => {\r\n    if (isLogin) {\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/Textnote\" exact component={AppPage}/>\r\n                <Redirect to=\"/Textnote\"/>\r\n            </Switch>\r\n        )\r\n    }\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/Textnote/log\" exact component={AuthPage}/>\r\n            <Redirect to=\"/Textnote/log\"/>\r\n        </Switch>\r\n    )\r\n\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}